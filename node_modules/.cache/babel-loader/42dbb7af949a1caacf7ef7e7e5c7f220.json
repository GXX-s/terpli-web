{"ast":null,"code":"var _jsxFileName = \"/Users/oliverbigelow/tepli-web/src/components/Form/Form.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Logo from \"./../../images/terplilogoforsite.svg\";\nimport { Container, FormWrap, Icon, FormContent, FormElement, FormH1, FormLabel, FormInput, FormButton, FormButton2, Text, FormColumn, FormMessageInput } from '../Signin/SigninElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Form extends Component {\n  constructor(props) {\n    super(props); // if the type of form is email than do this, if its investor do this ...\n\n    {\n      if (this.props.type === 'investor') {\n        this.state = {\n          email: '',\n          name: '',\n          message: ''\n        };\n      } else if (this.props.type === 'email') {\n        this.state = {\n          email: ''\n        };\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitEmail = this.handleSubmitEmail.bind(this);\n    this.handleSubmitInvestor = this.handleSubmitInvestor.bind(this);\n  } // when the input field changes it also changes the state\n\n\n  handleChange(e) {\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  } // when submitting an email form\n\n\n  handleSubmitEmail(e) {\n    axios({\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      method: 'post',\n      // this is the url for webnode db\n      url: 'http://ec2-18-191-77-143.us-east-2.compute.amazonaws.com:8002/api/email/new',\n      data: this.state\n    }).then(res => {\n      console.log(res);\n      this.setState({\n        email: ''\n      });\n\n      if (res.data.errors) {\n        alert(JSON.stringify(res.data.errors[0].message));\n      } else {\n        alert('Your email has been put on the early access list, Thank You!');\n      }\n    }).catch(err => {\n      alert(err);\n    });\n    e.preventDefault();\n  } // when submiting an investr form\n\n\n  handleSubmitInvestor(e) {\n    axios({\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      method: 'post',\n      // url for aws webnode db\n      url: 'http://ec2-18-191-77-143.us-east-2.compute.amazonaws.com:8002/api/investor/new',\n      data: this.state\n    }).then(res => {\n      console.log(res);\n      this.setState({\n        email: '',\n        name: '',\n        subject: '',\n        phoneNumber: '',\n        message: ''\n      });\n\n      if (res.data.errors) {\n        alert(JSON.stringify(res.data.errors[0].message));\n      } else {\n        alert('Your Inquiry has been sent, we will contact you shortly');\n      }\n    }).catch(err => {\n      alert(err);\n    });\n    e.preventDefault();\n  }\n\n  formatForm() {\n    console.log(this.state);\n\n    if (this.props.type === 'email') {\n      return (\n        /*#__PURE__*/\n        // <form onSubmit={this.handleSubmitEmail}>\n        //     <label htmlFor=\"email\">Email:</label>\n        //     <input value={this.state.email} type=\"text\" id=\"email\" name=\"email\" onChange={this.handleChange} />\n        //     <input type=\"submit\" value=\"Submit\" />\n        // </form>\n        _jsxDEV(\"form\", {\n          onSubmit: this.handleSubmitEmail,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            placeholder: \"Email\",\n            value: this.state.email,\n            name: \"email\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormButton2, {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      );\n    } else if (this.props.type === 'investor') {\n      return /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          style: \"margin-left: 30px;\",\n          height: \"150px\",\n          width: \"150px\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(FormElement, {\n            onSubmit: this.handleSubmitInvestor,\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Contact Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormColumn, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                value: this.state.name,\n                name: \"name\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                value: this.state.email,\n                name: \"email\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormMessageInput, {\n              value: this.state.message,\n              name: \"message\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this) // <input value={this.state.email} type=\"text\" id=\"email\" name=\"email\" onChange={this.handleChange} />\n      // <label htmlFor=\"name\">Name:</label>\n      // <input value={this.state.name} type=\"text\" id=\"name\" name=\"name\" onChange={this.handleChange} />\n      // <label htmlFor=\"message\">Message:</label>\n      // <input value={this.state.message} type=\"textarea\" id=\"message\" name=\"message\" onChange={this.handleChange} />\n      // <input type=\"submit\" value=\"Submit\" />\n      ;\n    }\n  }\n\n  render() {\n    return this.formatForm();\n  }\n\n}\nexport default Form;","map":{"version":3,"sources":["/Users/oliverbigelow/tepli-web/src/components/Form/Form.js"],"names":["React","Component","axios","Container","FormWrap","Icon","FormContent","FormElement","FormH1","FormLabel","FormInput","FormButton","FormButton2","Text","FormColumn","FormMessageInput","Form","constructor","props","type","state","email","name","message","handleChange","bind","handleSubmitEmail","handleSubmitInvestor","e","setState","target","value","headers","method","url","data","then","res","console","log","errors","alert","JSON","stringify","catch","err","preventDefault","subject","phoneNumber","formatForm","Logo","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Logo from \"./../../images/terplilogoforsite.svg\"\n\n\nimport {\n    Container,\n    FormWrap,\n    Icon,\n    FormContent,\n    FormElement,\n    FormH1,\n    FormLabel,\n    FormInput,\n    FormButton,\n    FormButton2,\n    Text,\n    FormColumn,\n    FormMessageInput\n} from '../Signin/SigninElements';\n\nexport class Form extends Component {\n    constructor(props) {\n        super(props);\n        // if the type of form is email than do this, if its investor do this ...\n        {\n            if (this.props.type === 'investor') {\n                this.state = { email: '', name: '', message: '' };\n\n            } else if (this.props.type === 'email') {\n                this.state = { email: '' };\n            }\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmitEmail = this.handleSubmitEmail.bind(this);\n        this.handleSubmitInvestor = this.handleSubmitInvestor.bind(this);\n\n    }\n\n    // when the input field changes it also changes the state\n    handleChange(e) {\n        this.setState({ ...this.state, [e.target.name]: e.target.value })\n    }\n\n    // when submitting an email form\n    handleSubmitEmail(e) {\n        axios({\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\"\n            },\n            method: 'post',\n            // this is the url for webnode db\n            url: 'http://ec2-18-191-77-143.us-east-2.compute.amazonaws.com:8002/api/email/new',\n            data: this.state\n        })\n            .then(res => {\n                console.log(res)\n                this.setState({ email: '' })\n                if (res.data.errors) {\n                    alert(JSON.stringify(res.data.errors[0].message))\n\n                } else {\n                    alert('Your email has been put on the early access list, Thank You!')\n                }\n            })\n            .catch(err => {\n                alert(err)\n\n            })\n        e.preventDefault();\n    }\n\n\n    // when submiting an investr form\n    handleSubmitInvestor(e) {\n        axios({\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\"\n            },\n            method: 'post',\n            // url for aws webnode db\n            url: 'http://ec2-18-191-77-143.us-east-2.compute.amazonaws.com:8002/api/investor/new',\n            data: this.state\n        })\n            .then(res => {\n                console.log(res)\n                this.setState({ email: '', name: '', subject: '', phoneNumber: '', message: '' })\n                if (res.data.errors) {\n                    alert(JSON.stringify(res.data.errors[0].message))\n\n                } else {\n                    alert('Your Inquiry has been sent, we will contact you shortly')\n                }\n            })\n            .catch(err => {\n                alert(err)\n\n            })\n        e.preventDefault();\n    }\n\n    formatForm() {\n        console.log(this.state)\n        if (this.props.type === 'email') {\n            return (\n\n                // <form onSubmit={this.handleSubmitEmail}>\n                //     <label htmlFor=\"email\">Email:</label>\n                //     <input value={this.state.email} type=\"text\" id=\"email\" name=\"email\" onChange={this.handleChange} />\n                //     <input type=\"submit\" value=\"Submit\" />\n                // </form>\n                <form onSubmit={this.handleSubmitEmail}>\n                    <FormInput placeholder='Email' value={this.state.email} name='email' onChange={this.handleChange}></FormInput>\n                    <FormButton2>Submit</FormButton2>\n                </form>\n            )\n        } else if (this.props.type === 'investor') {\n            return (\n\n                <FormWrap>\n                    <img src={Logo} style = 'margin-left: 30px;' height=\"150px\" width=\"150px\" alt=\"Logo\" />\n                    <FormContent>\n\n                        <FormElement onSubmit={this.handleSubmitInvestor}>\n                            <FormH1>Contact Form</FormH1>\n                            <FormColumn>\n                                <FormLabel htmlFor=\"name\">Name</FormLabel>\n                                <FormInput value={this.state.name} name='name' onChange={this.handleChange}></FormInput>\n                                <FormLabel htmlFor=\"email\">Email</FormLabel>\n                                <FormInput value={this.state.email} name='email' onChange={this.handleChange}></FormInput>\n                            </FormColumn>\n                            <FormLabel htmlFor=\"message\">Message</FormLabel>\n                            <FormMessageInput value={this.state.message} name='message' onChange={this.handleChange}></FormMessageInput>\n                            <FormButton>Submit</FormButton>\n                        </FormElement>\n\n                    </FormContent>\n                </FormWrap>\n\n\n                // <input value={this.state.email} type=\"text\" id=\"email\" name=\"email\" onChange={this.handleChange} />\n                // <label htmlFor=\"name\">Name:</label>\n                // <input value={this.state.name} type=\"text\" id=\"name\" name=\"name\" onChange={this.handleChange} />\n                // <label htmlFor=\"message\">Message:</label>\n                // <input value={this.state.message} type=\"textarea\" id=\"message\" name=\"message\" onChange={this.handleChange} />\n                // <input type=\"submit\" value=\"Submit\" />\n            )\n        }\n    }\n    render() {\n        return this.formatForm()\n    }\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}