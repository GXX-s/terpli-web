{"ast":null,"code":"import _objectSpread from\"/Users/oliverbigelow/tepli-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/oliverbigelow/tepli-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/oliverbigelow/tepli-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/oliverbigelow/tepli-web/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/oliverbigelow/tepli-web/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{config}from'react-spring/renderprops';import Grid from'./Grid';import{Slug,Fade}from'./Primitives';import{data}from'./data';import'antd/dist/antd.css';import{X}from'react-bootstrap-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cell=/*#__PURE__*/function(_Component){_inherits(Cell,_Component);var _super=_createSuper(Cell);function Cell(){_classCallCheck(this,Cell);return _super.apply(this,arguments);}_createClass(Cell,[{key:\"render\",value:function render(){var _this$props=this.props,toggle=_this$props.toggle,name=_this$props.name,description=_this$props.description,css=_this$props.css,active=_this$props.active;return/*#__PURE__*/_jsxs(\"div\",{className:\"cell\",style:{backgroundImage:css,cursor:!active?'pointer':'auto'},onClick:!active?toggle:undefined,children:[/*#__PURE__*/_jsx(Fade,{show:active,delay:active?500:0,children:/*#__PURE__*/_jsx(\"div\",{className:\"details\",children:/*#__PURE__*/_jsxs(Slug,{delay:600,children:[/*#__PURE__*/_jsx(\"div\",{className:\"close\",children:/*#__PURE__*/_jsx(X,{type:\"close\",style:{cursor:'pointer'},onClick:toggle})}),/*#__PURE__*/_jsx(\"h1\",{children:name}),/*#__PURE__*/_jsx(\"h3\",{children:description})]})})}),/*#__PURE__*/_jsx(Fade,{show:!active,from:{opacity:0,transform:'translate3d(0,140px,0)'},enter:{opacity:1,transform:'translate3d(0,0px,0)'},leave:{opacity:0,transform:'translate3d(0,-50px,0)'},delay:active?0:400,children:/*#__PURE__*/_jsx(\"div\",{className:\"default\",children:/*#__PURE__*/_jsx(\"div\",{style:{zIndex:1},children:name})})})]});}}]);return Cell;}(Component);var Portfolio=/*#__PURE__*/function(_Component2){_inherits(Portfolio,_Component2);var _super2=_createSuper(Portfolio);function Portfolio(){var _this;_classCallCheck(this,Portfolio);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super2.call.apply(_super2,[this].concat(args));_this.state={data:data};return _this;}_createClass(Portfolio,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Grid,{className:\"grid\"// Arbitrary data, should contain keys, possibly heights, etc.\n,data:this.state.data// Key accessor, instructs grid on how to fet individual keys from the data set\n,keys:function keys(d){return d.name;}// Can be a fixed value or an individual data accessor\n,heights:function heights(d){return d.height;}// Number of columns\n,columns:4// Space between elements\n,margin:30// Removes the possibility to scroll away from a maximized element\n,lockScroll:false// Delay when active elements (blown up) are minimized again\n,closeDelay:500// Regular react-spring configs\n,config:config.slow,children:function children(data,active,toggle){return/*#__PURE__*/_jsx(Cell,_objectSpread(_objectSpread({},data),{},{active:active,toggle:toggle}));}});}}]);return Portfolio;}(Component);export{Portfolio as default};","map":{"version":3,"sources":["/Users/oliverbigelow/tepli-web/src/components/Portfolio/Portfolio.js"],"names":["React","Component","config","Grid","Slug","Fade","data","X","Cell","props","toggle","name","description","css","active","backgroundImage","cursor","undefined","opacity","transform","zIndex","Portfolio","state","d","height","slow"],"mappings":"oiBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,cAA3B,CACA,OAAQC,IAAR,KAAmB,QAAnB,CACA,MAAO,oBAAP,CACA,OAASC,CAAT,KAAkB,uBAAlB,C,2FAGMC,CAAAA,I,mNACJ,iBAAS,iBAC4C,KAAKC,KADjD,CACCC,MADD,aACCA,MADD,CACSC,IADT,aACSA,IADT,CACeC,WADf,aACeA,WADf,CAC4BC,GAD5B,aAC4BA,GAD5B,CACiCC,MADjC,aACiCA,MADjC,CAEP,mBACE,aACA,SAAS,CAAC,MADV,CAEA,KAAK,CAAE,CAAEC,eAAe,CAAEF,GAAnB,CAAwBG,MAAM,CAAE,CAACF,MAAD,CAAU,SAAV,CAAsB,MAAtD,CAFP,CAGA,OAAO,CAAE,CAACA,MAAD,CAAUJ,MAAV,CAAmBO,SAH5B,wBAKE,KAAC,IAAD,EAAM,IAAI,CAAEH,MAAZ,CAAoB,KAAK,CAAEA,MAAM,CAAG,GAAH,CAAS,CAA1C,uBACE,YAAK,SAAS,CAAC,SAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAE,GAAb,wBAEE,YAAK,SAAS,CAAC,OAAf,uBAEE,KAAC,CAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAE,CAAEE,MAAM,CAAE,SAAV,CAFT,CAGE,OAAO,CAAEN,MAHX,EAFF,EAFF,cAUE,oBAAKC,IAAL,EAVF,cAWE,oBAAKC,WAAL,EAXF,GADF,EADF,EALF,cAuBE,KAAC,IAAD,EACE,IAAI,CAAE,CAACE,MADT,CAEE,IAAI,CAAE,CAAEI,OAAO,CAAE,CAAX,CAAcC,SAAS,CAAE,wBAAzB,CAFR,CAGE,KAAK,CAAE,CAAED,OAAO,CAAE,CAAX,CAAcC,SAAS,CAAE,sBAAzB,CAHT,CAIE,KAAK,CAAE,CAAED,OAAO,CAAE,CAAX,CAAcC,SAAS,CAAE,wBAAzB,CAJT,CAKE,KAAK,CAAEL,MAAM,CAAG,CAAH,CAAO,GALtB,uBAME,YAAK,SAAS,CAAC,SAAf,uBACE,YAAK,KAAK,CAAE,CAAEM,MAAM,CAAE,CAAV,CAAZ,UAA4BT,IAA5B,EADF,EANF,EAvBF,GADF,CAqCD,C,kBAxCgBV,S,KA2CEoB,CAAAA,S,4UACnBC,K,CAAQ,CAAEhB,IAAI,CAAJA,IAAF,C,2DACR,iBAAS,CACP,mBACE,KAAC,IAAD,EACE,SAAS,CAAC,MACV;AAFF,CAGE,IAAI,CAAE,KAAKgB,KAAL,CAAWhB,IACjB;AAJF,CAKE,IAAI,CAAE,cAAAiB,CAAC,QAAIA,CAAAA,CAAC,CAACZ,IAAN,EACP;AANF,CAOE,OAAO,CAAE,iBAAAY,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAN,EACV;AARF,CASE,OAAO,CAAE,CACT;AAVF,CAWE,MAAM,CAAE,EACR;AAZF,CAaE,UAAU,CAAE,KACZ;AAdF,CAeE,UAAU,CAAE,GACZ;AAhBF,CAiBE,MAAM,CAAEtB,MAAM,CAACuB,IAjBjB,UAkBG,kBAACnB,IAAD,CAAOQ,MAAP,CAAeJ,MAAf,qBACC,KAAC,IAAD,gCAAUJ,IAAV,MAAgB,MAAM,CAAEQ,MAAxB,CAAgC,MAAM,CAAEJ,MAAxC,GADD,EAlBH,EADF,CAwBD,C,uBA3BoCT,S,SAAlBoB,S","sourcesContent":["import React, { Component } from 'react'\nimport { config } from 'react-spring/renderprops'\nimport Grid from './Grid'\nimport { Slug, Fade } from './Primitives'\nimport {data} from './data'\nimport 'antd/dist/antd.css'\nimport { X } from 'react-bootstrap-icons';\n\n\nclass Cell extends Component {\n  render() {\n    const { toggle, name, description, css, active } = this.props\n    return (\n      <div\n      className=\"cell\"\n      style={{ backgroundImage: css, cursor: !active ? 'pointer' : 'auto' }}\n      onClick={!active ? toggle : undefined}>\n          \n        <Fade show={active} delay={active ? 500 : 0}>\n          <div className=\"details\">\n            <Slug delay={600}>\n              \n              <div className=\"close\">\n              \n                <X\n                  type=\"close\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={toggle}\n                />\n              </div>\n              <h1>{name}</h1>\n              <h3>{description}</h3>\n\n            </Slug>\n          </div>\n        </Fade>\n        <Fade\n          show={!active}\n          from={{ opacity: 0, transform: 'translate3d(0,140px,0)' }}\n          enter={{ opacity: 1, transform: 'translate3d(0,0px,0)' }}\n          leave={{ opacity: 0, transform: 'translate3d(0,-50px,0)' }}\n          delay={active ? 0 : 400}>\n          <div className=\"default\">\n            <div style={{ zIndex: 1 }}>{name}</div>\n          </div>\n        </Fade>\n      </div>\n      \n    )\n  }\n}\n\nexport default class Portfolio extends Component {\n  state = { data }\n  render() {\n    return (\n      <Grid\n        className=\"grid\"\n        // Arbitrary data, should contain keys, possibly heights, etc.\n        data={this.state.data}\n        // Key accessor, instructs grid on how to fet individual keys from the data set\n        keys={d => d.name}\n        // Can be a fixed value or an individual data accessor\n        heights={d => d.height}\n        // Number of columns\n        columns={4}\n        // Space between elements\n        margin={30}\n        // Removes the possibility to scroll away from a maximized element\n        lockScroll={false}\n        // Delay when active elements (blown up) are minimized again\n        closeDelay={500}\n        // Regular react-spring configs\n        config={config.slow}>\n        {(data, active, toggle) => (\n          <Cell {...data} active={active} toggle={toggle} />\n        )}\n      </Grid>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}